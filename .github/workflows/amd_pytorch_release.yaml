name: "Build and release PyTorch pipeline"

on:
  workflow_dispatch:
    inputs:
      ROCM_VERSION:
        description: "What AMD ROCm GPU computation platform version to use."
        required: true
        default: "5.1.3"
      ROCM_ARCH:
        description: "What ROCm GPU architecture(s) to use."
        required: true
        default: "gfx803"

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Validate Docker-Compose files
        env:
          BUILD_ARGUMENT: "validate-docker-compose-files"
          SRC_APP: "src/demo"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
      - name: Build Base Ubuntu 20.04 image
        env:
          ROCM_ARCH: "${{ github.event.inputs.ROCM_ARCH }}"
          ROCM_VERSION: "${{ github.event.inputs.ROCM_VERSION }}"
          APP_NAME: "base-ubuntu-2004"
          BUILD_ARGUMENT: "build-app"
          SRC_APP: "docker-files/base-ubuntu-2004"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
      - name: Release ROCm PyTorch built and packaged binaries
        env:
          ROCM_ARCH: "${{ github.event.inputs.ROCM_ARCH }}"
          ROCM_VERSION: "${{ github.event.inputs.ROCM_VERSION }}"
          PYPI_ROCM_REPOSITORY: "${{ secrets.PYPI_ROCM_REPOSITORY }}"
          PYPI_USERNAME: "${{ secrets.PYPI_USERNAME }}"
          PYPI_PASSWORD: "${{ secrets.PYPI_PASSWORD }}"
          APP_NAME: "amd-rocm-pytorch-release"
          BUILD_ARGUMENT: "build-app"
          SRC_APP: "docker-files/amd-pytorch-release"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
