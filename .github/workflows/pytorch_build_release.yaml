name: "Build and release PyTorch pipeline"

on:
  workflow_dispatch:
    inputs:
      ROCM_VERSION:
        description: "What AMD ROCm GPU computation platform version to use."
        required: true
        default: "5.2.1"
      ROCM_ARCH:
        description: "What ROCm GPU architecture(s) to use."
        required: true
        default: "gfx803\\;gfx900\\;gfx906\\;gfx908"
      UPLOAD_TO_ARTIFACTORY:
        description: "Upload ROCm PyTorch wheel file to artifactory."
        required: true
        default: "False"
      PROCESSING_UNIT:
        description: "Processing unit to use. Can be cpu or amd"
        required: true
        default: "cpu"

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  PROCESSING_UNIT: "${{ github.event.inputs.PROCESSING_UNIT }}"
  PYPI_PASSWORD: "${{ secrets.PYPI_PASSWORD }}"
  PYPI_ROCM_REPOSITORY: "${{ secrets.PYPI_ROCM_REPOSITORY }}"
  PYPI_USERNAME: "${{ secrets.PYPI_USERNAME }}"
  ROCM_ARCH: "${{ github.event.inputs.ROCM_ARCH }}"
  ROCM_VERSION: "${{ github.event.inputs.ROCM_VERSION }}"
  UPLOAD_TO_ARTIFACTORY: "${{ github.event.inputs.UPLOAD_TO_ARTIFACTORY }}"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Validate Docker-Compose files
        env:
          BUILD_ARGUMENT: "validate-docker-compose-files"
          SRC_APP: "src/demo"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
      - name: Build Base Ubuntu 20.04 image
        env:
          APP_NAME: "base-ubuntu-2004"
          BUILD_ARGUMENT: "build-app"
          SRC_APP: "docker-files/base-ubuntu-2004"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
      - name: Release Processing PyTorch built and packaged binaries
        env:
          APP_NAME: "rocm-pytorch-release"
          BUILD_ARGUMENT: "run-app"
          SRC_APP: "docker-files/pytorch-release"
        run: "make -f MakefilePyTorch ${BUILD_ARGUMENT}"
      - name: Set environment variable for PyTorch filename and filepath
        run: |
          source setup_pytorch_filename_and_filepath_env.sh
          echo PYTORCH_NAME=${PYTORCH_NAME} >> $GITHUB_ENV
          echo PYTORCH_FILE=${PYTORCH_FILE} >> $GITHUB_ENV
      - name: Upload built PyTorch wheel file to GitHub
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "${{ env.PYTORCH_FILE }}"
          tag_name: "${{ env.PYTORCH_NAME }}"
          tags: true
          draft: false
